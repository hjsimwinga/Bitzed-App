server {
    server_name bitzed.xyz www.bitzed.xyz admin.bitzed.xyz spend.bitzed.xyz;

    # Handle /downloads (without trailing slash) - redirect to /downloads/
    location = /downloads {
        return 301 /downloads/;
    }

    # Serve static files from /downloads directory
    location /downloads/ {
        alias /srv/website/downloads/;
        index index.html;
        try_files $uri $uri/ =404;
        
        # Enable APK downloads
        location ~* \.apk$ {
            add_header Content-Type application/vnd.android.package-archive;
            add_header Content-Disposition "attachment";
        }
    }

    # Proxy everything else to Express.js
    location / {
        proxy_pass http://localhost:3001;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/bitzed.xyz/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/bitzed.xyz/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}

server {
    if ($host = www.bitzed.xyz) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

    if ($host = bitzed.xyz) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

    listen 80;
    server_name bitzed.xyz www.bitzed.xyz;
    return 404; # managed by Certbot
}
